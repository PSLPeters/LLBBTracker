//
//  PitchersShareView.swift
//  BaseballTracker
//
//  Created by Michael Peters on 3/11/25.
//

import SwiftUI

struct PitchersShareView: View {
    
    // MARK: AppStorage variables
    @AppStorage("selectedColorScheme") private var selectedColorScheme = "System"
    
    // MARK: Other variables
    @Bindable var pitcher: modelPitcher
    
    // MARK: Body
    var body: some View {
        
        // MARK: Calculated variables
        let restedDate = Calendar.current.date(byAdding: .day, value: pitcher.pitcherDaysRest, to: pitcher.pitcherDate)
        
        VStack {
            BaseballRepeatView()
            Text(pitcher.pitcherName)
                .font(.title).bold()
                .padding(.top, 10)
            HStack {
                Image(systemName: "baseball")
                Text(String(format: "%.0f", pitcher.pitcherCount))
                    .bold()
                Image(systemName: "baseball")
            }
            .font(.system(size: 50))
            .padding(.bottom, 10)
            Divider()
            LabeledContent("Date:", value: "[\(pitcher.pitcherDate.getDayOfWeek())] - \(pitcher.pitcherDate.formatDate())")
            Divider()
            LabeledContent("Age:", value: arrPitcherAges[pitcher.pitcherAgeSelectedIndex].age)
            Divider()
            LabeledContent("Maximum Pitches:", value: String(arrPitcherAges[pitcher.pitcherAgeSelectedIndex].pitchLimit))
            Divider()
            LabeledContent("Percentage:", value: pitcher.pitcherCountPercentage.formatted(
                .percent.precision(.fractionLength(2))))
            Divider()
            LabeledContent("Days Rest:", value: String(pitcher.pitcherDaysRest))
            Divider()
            LabeledContent("Rested Date:", value: "[\(restedDate!.getDayOfWeek())] - \(restedDate!.formatDate())")
            Divider()
            Group {
                Text("Screenshot generated by:")
                    .padding(.top, 5)
                Text(Constants.appName)
                    .padding(.bottom, 5)
            }
            .font(.caption2)
            .foregroundColor(.secondary)
            BaseballRepeatView()
        }
        .padding()
        .frame(width: 350, height: 450)
        .background(RoundedRectangle(cornerRadius: 10)
            .fill(Color(.systemBackground)))
        .overlay {
            RoundedRectangle(cornerRadius: 10).stroke(lineWidth: 2)
        }
        .preferredColorScheme(selectedColorScheme == "System" ? nil : selectedColorScheme == "Dark" ? .dark : .light)
    }
}

struct BaseballRepeatView: View {
    var body: some View {
        HStack {
            ForEach(0..<12) {_ in
                Image(systemName: "baseball.circle")
            }
        }
    }
}

// MARK: Preview
#Preview {
    PitchersShareView(pitcher: .init(
        pitcherDate: .now,
        pitcherName: "Mariano Rivera",
        pitcherAgeSelectedIndex: 10,
        pitcherCount: 24,
        pitcherDaysRest: 1,
        pitcherCountPercentage: 0)
    )
}
